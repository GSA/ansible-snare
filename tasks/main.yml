---
- name: create {{ win_agent_path }} directory
  win_file:
    path: '{{ win_agent_path }}'
    state: directory
  when: ansible_os_family == 'Windows'

- name: create {{ win_agent_logs }} directory
  win_file:
    path: '{{ win_agent_logs }}'
    state: directory
  when: ansible_os_family == 'Windows'

- name: checking for installer
  win_stat:
    path: '{{ win_agent_path }}{{ windows_snare_agent_filename }}'
  register: installer
  when: ansible_os_family == 'Windows'

- name: checking for configuration file
  win_stat:
    path: '{{ win_agent_path }}{{ snare_action_filename }}'
  register: actionsite
  when: ansible_os_family == 'Windows'

- name: move installer to {{ win_agent_path }} directory
  win_copy:
    src: '{{ lin_agent_path }}/{{ item.name }}'
    dest: '{{ win_agent_path }}{{ item.name }}'
  with_items:
    - { name: '{{ windows_snare_agent_filename }}'}
  when: not installer.stat.exists and ansible_os_family == 'Windows'

- name: move snare.inf to {{ win_agent_path }} directory
  win_copy:
    src: '{{ lin_agent_path }}/{{ item.name }}'
    dest: '{{ win_agent_path }}{{ item.name }}'
  with_items:
    - { name: '{{ snare_action_filename }}'}
  when: not actionsite.stat.exists and ansible_os_family == 'Windows'

- name: install windows snare agent
  win_package:
    path: '{{ agent_path }}\\{{ item.name }}'
    chdir: '{{ agent_path }}'
    product_id: '{{ snare_product_id }}'
    arguments:
      - /reinstall
      - /verysilent
      - /suppressmsgboxes
      - /loadinf=snare.inf
    state: present
    log_path: '{{ agent_logs }}\\{{ item.name }}_log.txt'
    validate_certs: no
  with_items:
    - { name: '{{ windows_snare_agent_filename }}' }
  when: ansible_os_family == 'Windows'
